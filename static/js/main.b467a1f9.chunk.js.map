{"version":3,"sources":["components/facebookMain/containers/facebookContainer.js","components/facebookMain/containers/loginContainer.js","components/facebookMain/facebookMain.js","App.js","serviceWorker.js","index.js"],"names":["FacebookContainer","className","src","alt","LoginContainer","Form","method","action","Group","controlId","Control","type","placeholder","class","Button","variant","column","sm","href","FacebookMain","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0OAkBeA,MAff,WACE,OACE,yBAAKC,UAAU,mDACb,yBACEC,IAAI,4DACJC,IAAI,GACJF,UAAU,gCAEZ,wBAAIA,UAAU,sBAAd,mE,qBCkDSG,MAvDf,WACE,OACE,6BACE,yBAAKH,UAAU,4DACb,6BACA,yBAAKA,UAAU,IACb,kBAACI,EAAA,EAAD,CACEC,OAAO,OACPC,OAAO,2JAEP,yBAAKN,UAAU,SACb,kBAACI,EAAA,EAAKG,MAAN,CAAYC,UAAU,kBACpB,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,YAAY,gCACZC,MAAM,gBAIV,kBAACR,EAAA,EAAKG,MAAN,CAAYC,UAAU,qBACpB,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,YAAY,eAI9C,yBAAKX,UAAU,gDACb,kBAACa,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAASK,QAAM,EAACC,GAAG,KAAlD,WAKJ,uBACEhB,UAAU,4CACViB,KAAK,yLAFP,uBAMA,8BAEF,yBAAKjB,UAAU,eACb,4BAAQA,UAAU,wBAChB,uBAAGY,MAAM,gBAAgBK,KAAK,kCAA9B,2BAMN,yBAAKjB,UAAU,oBACb,2BACE,iDADF,wCChCOkB,MAff,WACE,OACE,yBAAKlB,UAAU,6CACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,UCNKmB,MAJf,WACE,OAAO,kBAAC,EAAD,OCOWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b467a1f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction FacebookContainer() {\r\n  return (\r\n    <div className=\"d-flex-column justify-content-center h-100 my-5\">\r\n      <img\r\n        src=\"https://static.xx.fbcdn.net/rsrc.php/y8/r/dF5SId3UHWd.svg\"\r\n        alt=\"\"\r\n        className=\"img-fluid facebook-img w-75\"\r\n      />\r\n      <h3 className=\"font-weight-normal\">\r\n        Facebook helps you connect and share with people in your life\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacebookContainer;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"../facebookMain.css\";\r\n\r\nfunction LoginContainer() {\r\n  return (\r\n    <div>\r\n      <div className=\"container my-2 rounded shadow position-relative bg-white\">\r\n        <br />\r\n        <div className=\"\">\r\n          <Form\r\n            method=\"post\"\r\n            action=\"https://www.facebook.com/login/?privacy_mutation_token=eyJ0eXBlIjowLCJjcmVhdGlvbl90aW1lIjoxNjE0MDc3MjQyLCJjYWxsc2l0ZV9pZCI6MzgxMjI5MDc5NTc1OTQ2fQ%3D%3D\"\r\n          >\r\n            <div className=\"email\">\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email address or phone number\"\r\n                  class=\"inputClass\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n            </div>\r\n\r\n            <div className=\"text-center font-weight-bold w-100 login-btn\">\r\n              <Button variant=\"primary\" type=\"submit\" column sm=\"2\">\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n          <a\r\n            className=\"d-block my-2 text-center w-100 forgotPass\"\r\n            href=\"https://www.facebook.com/recover/initiate/?ars=facebook_login&privacy_mutation_token=eyJ0eXBlIjowLCJjcmVhdGlvbl90aW1lIjoxNjE0MDc1ODQ4LCJjYWxsc2l0ZV9pZCI6MzgxMjI5MDc5NTc1OTQ2fQ%3D%3D\"\r\n          >\r\n            Forgotten password?\r\n          </a>\r\n          <hr></hr>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-success mb-4\">\r\n            <a class=\"createAccount\" href=\"https://www.facebook.com/r.php\">\r\n              Create a new account\r\n            </a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-3 text-center\">\r\n        <p>\r\n          <strong>Create a Page</strong> for celebrity brand and business\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport FacebookContainer from \"./containers/facebookContainer\";\r\nimport LoginContainer from \"./containers/loginContainer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./facebookMain.css\";\r\n\r\nfunction FacebookMain() {\r\n  return (\r\n    <div className=\"fill-window container container1 bg-light\">\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <div className=\"col-md-5\">\r\n          <FacebookContainer />\r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <LoginContainer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacebookMain;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport FacebookMain from \"./components/facebookMain/facebookMain\";\r\n\r\nfunction App() {\r\n  return <FacebookMain />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}